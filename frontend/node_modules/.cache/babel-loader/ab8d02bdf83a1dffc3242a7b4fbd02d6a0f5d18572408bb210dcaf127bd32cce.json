{"ast":null,"code":"var _jsxFileName = \"A:\\\\UI Development\\\\react-router-projects\\\\adv-react-router\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter } from \"react-router-dom\";\nimport { RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport EventsPage, { loadData } from \"./pages/EventsPage\";\nimport EventDetailsPage, { eventItemLoader, action as deleteEventAction } from \"./pages/EventDetailsPage\";\nimport NewEventPage, { action as newEventAction } from \"./pages/NewEventPage\";\nimport RootPage from \"./RootPage\";\nimport ErrorPage from \"./pages/ErrorPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport EventsRootLayout from \"./pages/EventsRootLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(RootPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }, this)\n    }, {\n      path: \"events\",\n      element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this),\n      errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 24\n        }, this),\n        loader: loadData,\n        errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)\n      }, {\n        path: \":eventId\",\n        id: \"event-details\",\n        loader: eventItemLoader,\n        errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this),\n        children: [{\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(EventDetailsPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 28\n          }, this),\n          action: deleteEventAction\n        }, {\n          path: \"editEvent\",\n          element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 47\n          }, this),\n          action: newEventAction\n        }]\n      }, {\n        path: \"newEvent\",\n        element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 42\n        }, this),\n        action: newEventAction\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventsPage","loadData","EventDetailsPage","eventItemLoader","action","deleteEventAction","NewEventPage","newEventAction","RootPage","ErrorPage","EditEventPage","EventsRootLayout","jsxDEV","_jsxDEV","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","loader","id","_c","$RefreshReg$"],"sources":["A:/UI Development/react-router-projects/adv-react-router/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter } from \"react-router-dom\";\nimport { RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport EventsPage, { loadData } from \"./pages/EventsPage\";\nimport EventDetailsPage, { eventItemLoader, action as deleteEventAction } from \"./pages/EventDetailsPage\";\nimport NewEventPage ,{action as newEventAction}from \"./pages/NewEventPage\";\nimport RootPage from \"./RootPage\";\nimport ErrorPage from \"./pages/ErrorPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport EventsRootLayout from \"./pages/EventsRootLayout\";\n\nfunction App() {\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <RootPage />,\n      errorElement: <ErrorPage />,\n      children: [\n        { index: true, element: <HomePage /> },\n        {\n          path: \"events\",\n          element: <EventsRootLayout />,\n          errorElement: <ErrorPage />,\n          children: [\n            {\n              index: true,\n              element: <EventsPage />,\n              loader: loadData,\n              errorElement: <ErrorPage />,\n            },\n            {\n              path: \":eventId\",\n              id: \"event-details\",\n              loader: eventItemLoader,\n              errorElement: <ErrorPage />,\n              children: [\n                {\n                  index: true,\n                  element: <EventDetailsPage />,\n                  action: deleteEventAction\n                },\n                { path: \"editEvent\", element: <EditEventPage /> , action: newEventAction },\n              ],\n            },\n\n            { path: \"newEvent\", element: <NewEventPage />, action: newEventAction },\n          ],\n        },\n      ],\n    },\n  ]);\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}