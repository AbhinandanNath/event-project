{"ast":null,"code":"var _jsxFileName = \"A:\\\\UI Development\\\\react-router-projects\\\\adv-react-router\\\\frontend\\\\src\\\\pages\\\\EventDetailsPage.jsx\",\n  _s = $RefreshSig$();\nimport EventItem from '../components/EventItem';\nimport { useRouteLoaderData } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailsPage = () => {\n  _s();\n  const data = useRouteLoaderData('event-details');\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(EventDetailsPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailsPage;\nexport default EventDetailsPage;\nexport async function eventItemLoader({\n  request,\n  params\n}) {\n  const awaitedResponse = await fetch('http://localhost:8080/events/' + params.eventId);\n  if (!awaitedResponse.ok) {\n    throw new Response(JSON.stringify({\n      isError: true,\n      message: 'Could not fetch event!'\n    }), {\n      status: awaitedResponse.status,\n      statusText: awaitedResponse.statusText\n    });\n  } else {\n    return awaitedResponse;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailsPage\");","map":{"version":3,"names":["EventItem","useRouteLoaderData","jsxDEV","_jsxDEV","EventDetailsPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","eventItemLoader","request","params","awaitedResponse","fetch","eventId","ok","Response","JSON","stringify","isError","message","status","statusText","$RefreshReg$"],"sources":["A:/UI Development/react-router-projects/adv-react-router/frontend/src/pages/EventDetailsPage.jsx"],"sourcesContent":["import EventItem from '../components/EventItem'\r\nimport { useRouteLoaderData } from 'react-router-dom'\r\n\r\nconst EventDetailsPage = () => {\r\n\r\n  const data = useRouteLoaderData('event-details');\r\n\r\n  return (\r\n    <EventItem event={data.event} />\r\n  )\r\n}\r\n\r\nexport default EventDetailsPage\r\n\r\n\r\nexport async function eventItemLoader({ request, params }) {\r\n  const awaitedResponse = await fetch('http://localhost:8080/events/'+params.eventId);\r\n  if (!awaitedResponse.ok) {\r\n    throw new Response(\r\n      JSON.stringify({\r\n        isError: true,\r\n        message: 'Could not fetch event!',\r\n      }),\r\n      {\r\n        status: awaitedResponse.status,\r\n        statusText: awaitedResponse.statusText,\r\n      }\r\n    );\r\n  } else {\r\n    return awaitedResponse;\r\n  }\r\n}"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAASC,kBAAkB,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE7B,MAAMC,IAAI,GAAGL,kBAAkB,CAAC,eAAe,CAAC;EAEhD,oBACEE,OAAA,CAACH,SAAS;IAACO,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEpC,CAAC;AAAAN,EAAA,CAPKD,gBAAgB;EAAA,QAEPH,kBAAkB;AAAA;AAAAW,EAAA,GAF3BR,gBAAgB;AAStB,eAAeA,gBAAgB;AAG/B,OAAO,eAAeS,eAAeA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EACzD,MAAMC,eAAe,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAACF,MAAM,CAACG,OAAO,CAAC;EACnF,IAAI,CAACF,eAAe,CAACG,EAAE,EAAE;IACvB,MAAM,IAAIC,QAAQ,CAChBC,IAAI,CAACC,SAAS,CAAC;MACbC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE;IACX,CAAC,CAAC,EACF;MACEC,MAAM,EAAET,eAAe,CAACS,MAAM;MAC9BC,UAAU,EAAEV,eAAe,CAACU;IAC9B,CACF,CAAC;EACH,CAAC,MAAM;IACL,OAAOV,eAAe;EACxB;AACF;AAAC,IAAAJ,EAAA;AAAAe,YAAA,CAAAf,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}